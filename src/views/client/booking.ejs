<div class="booking-page">
    <div class="booking-page-heading">
        <div class="heading-wrapper">
            <div class="heading-intro">
                <div class="heading-intro-img-wrapper">
                    <a href="">
                        <% if (schedule.doctor.user.avatar) { %>
                            <img
                                src="<%= schedule.doctor.user.avatar %>"
                                class="heading-intro-img"
                            />
                            <% } else { %>
                            <img
                                src="https://api.dicebear.com/6.x/initials/svg?seed=<%= schedule.doctor.user.name %>"
                                class="heading-intro-img"
                            />
                            <% } %>
                    </a>
                </div>

                <div class="heading-intro-describe">
                    <h1>	
                        ĐẶT LỊCH KHÁM
                    </h1>
                    <h2>
                        <a href=""> 
                            <%= schedule.doctor.getRankName() %> <%= schedule.doctor.user.name %>
                        </a>
                    </h2>
                    <b>Chuyên khoa:</b> <%= schedule.doctor.speciality.name %>

                    <div class="heading-intro-time">
                        <b> Ca khám: </b> <%= schedule.shift.start_time.slice(0, -3) %> - <%= schedule.shift.end_time.slice(0, -3) %> 
                        
                        <span> | <b> Ngày khám: </b> </span>
                        
                        <%= new Date(schedule.date).toLocaleDateString('en-GB') %>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="booking-page-content">
        <div class="booking-page-wrapper">
            <div class="card">
                <div class="card-body">
                    <form action="/booking" method="POST" id="booking-form" role="form" class="form-horizontal" >
                        <div class="booking-price-list">
                            <div class="booking-page-price">
                                <span>Giá khám<span>
                                <div>
                                    <span class="booking-page-price-value">
                                        <%= new Intl.NumberFormat('vi-VN', { style:
                                        'currency', currency: 'VND'
                                        }).format(schedule.doctor.price); %> 
                                    </span>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" name="schedule_id" value="<%= schedule.id %>">
                        <input type="hidden" name="price" value="<%= schedule.doctor.price %>">
                        Họ và tên (<span style="color: red">*</span>)
                        <div class="input-describe mb-1">
                            Hãy ghi rõ Họ Và Tên, viết hoa những chữ cái đầu tiên, ví dụ: Trần Văn Phú
                        </div>
                        <div class="form-group row my-1">
                            <div class="col-sm-10">
                                <input id="form-input-name" type="text" name="name" class="form-control py-2" placeholder="Nhập họ và tên...">
                            </div>
                        </div>
                        <div id="invalid-name-describe" class = "mb-1">

                        </div>
    
                        Ngày sinh (<span style="color: red">*</span>)
                        
                        <div class="form-group row my-1">
                            <div class="col-sm-4">
                                <input id="form-input-birthdate" class="form-control py-2" name="birthday" type="date">
                            </div>
                        </div>
                        <div id="invalid-birthdate-describe" class = "mb-1"></div>
                        
        
                        Giới tính (<span style="color: red">*</span>)
                        <div class="input-group display_flex">
                            <label>
                                <input class="" type="radio" name="gender" value="1" dl-luu="book_for" dl-name="datcho" dl-value="minh">
                                Nam
                            </label>
        
                            <label>
                                <input class="" type="radio" name="gender" value="0" dl-luu="book_for" dl-name="datcho" dl-value="nguoi">
                                Nữ
                            </label>
                        </div>
                        <div id="invalid-gender-describe" class = "mb-1"></div>

        
                        Số điện thoại (<span style="color: red">*</span>)
                        <div class="form-group row my-1">
                            <div class="col-sm-10">
                                <input id="form-input-phonenumber" type="number" class="form-control py-2" name="phone_number" placeholder="Nhập số điện thoại...">
                            </div>
                        </div>
                        <div id="invalid-phonenumber-describe" class = "mb-1"></div>
        
                        Email (<span style="color: red">*</span>)
                        <div class="form-group row my-1">
                            <div class="col-sm-10">
                                <input id="form-input-email" type="email" class="form-control py-2" name="email" placeholder="Nhập email...">
                            </div>
                        </div>
                        <div id="invalid-email-describe" class = "mb-1"></div>

                        Lý do khám (<span style="color: red">*</span>)
                        <div class="form-group row my-1">
                            <div class="col-sm-10">
                                <textarea id="form-texarea-description" class="form-control" rows="5" name="description" placeholder="Nhập lý do khám..."
                                style="font-size: medium"></textarea>
                            </div>
                        </div>
                        <div id="invalid-description-describe" class = "mb-1"></div>
        
                        <div class="input-ground">
                            <div class="input-wrapper">
                                <p class="input-payingMethod">Hình thức thanh toán</p>
        
                                <div class="input-payingMedthod-choice">
                                    <input class="dauvao-nhap" type="radio" value="1" checked="checked">
                                    <label for="">
                                        Thanh toán sau tại cơ sở y tế
                                    </label>
                                </div>
                            </div>
                        </div>
                       
                        <div class="booking-paying-note">
                            <p>
                                <b>LƯU Ý</b>
                            </p>
                            <p>
                                Thông tin anh/chị cung cấp sẽ được sử dụng làm hồ sơ khám bệnh, khi điền thông tin anh/chị vui lòng:
                            </p>
                            <ul>
                                <li>
                                    Ghi rõ họ và tên, viết hoa những chữ cái đầu tiên, ví dụ: <b>Trần Văn Phú </b>
                                </li>
                                <li>Điền đầy đủ, đúng và vui lòng kiểm tra lại thông tin trước khi ấn "Xác nhận"</li>
                            </ul>
                        </div>
        
                    </form>
                    <div class="input-group">
                        <button id="booking-submit-btn" class="submit-btn" data-toggle="modal" data-target="#confirmModal">Xác nhận đặt khám</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<%- contentFor('css') %>
<%- include('style') %>

<%- contentFor('js') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
//get input field
// Get the input fields and the submit button
    const inputName = document.getElementById('form-input-name');
    const inputBirthdate = document.getElementById('form-input-birthdate');
    const inputPhonenumber = document.getElementById('form-input-phonenumber');
    const inputEmail = document.getElementById('form-input-email');
    const formtexareaDescription = document.getElementById('form-texarea-description');
    const genderRadios = document.querySelectorAll('input[name="gender"]');
    const bookingSubmitBtn = document.getElementById('booking-submit-btn');

    // Get the error message divs
    const invalidNameDescribe = document.getElementById('invalid-name-describe');
    const invalidBirthdateDescribe = document.getElementById('invalid-birthdate-describe');
    const invalidPhonenumberDescribe = document.getElementById('invalid-phonenumber-describe');
    const invalidEmailDescribe = document.getElementById('invalid-email-describe');
    const invalidDescriptionDescribe = document.getElementById('invalid-description-describe');
    const invalidGenderDescribe = document.getElementById('invalid-gender-describe');

    let isInputNameValid = false;
    let isInputBirthdateValid = false;
    let isInputPhonenumberValid = false;
    let isInputEmailValid = false;
    let isFormtexareaDescriptionValid = false;


    // Add event listeners to the input fields
    const validInputName = () => {
        if (inputName.value === '') {
            inputName.classList.add('invalid-input');
            invalidNameDescribe.textContent = 'Vui lòng nhập họ và tên';
            invalidNameDescribe.classList.add('invalid-describe');
            isInputNameValid = false;
        }
        else if(inputName.value.length < 5) {
            inputName.classList.add('invalid-input');
            invalidNameDescribe.textContent = 'Họ và tên phải có ít nhất 5 ký tự';
            invalidNameDescribe.classList.add('invalid-describe');
            isInputNameValid = false;
        }
        else {
            inputName.classList.remove('invalid-input');
            invalidNameDescribe.textContent = '';
            invalidNameDescribe.classList.remove('invalid-describe');
            isInputNameValid = true;
        }
    }
    inputName.addEventListener('blur', validInputName);

    const validInputBirthdate = () => {
        if (inputBirthdate.value === '') {
            inputBirthdate.classList.add('invalid-input');
            invalidBirthdateDescribe.textContent = 'Vui lòng nhập ngày sinh';
            invalidBirthdateDescribe.classList.add('invalid-describe');
            isInputBirthdateValid = false;
        }
        else {
            inputBirthdate.classList.remove('invalid-input');
            invalidBirthdateDescribe.textContent = '';
            invalidBirthdateDescribe.classList.remove('invalid-describe');
            isInputBirthdateValid = true;
        }
    }
    inputBirthdate.addEventListener('blur', validInputBirthdate);

    const validInputPhonenumber = () => {
        if (inputPhonenumber.value === '') {
            inputPhonenumber.classList.add('invalid-input');
            invalidPhonenumberDescribe.textContent = 'Vui lòng nhập số điện thoại';
            invalidPhonenumberDescribe.classList.add('invalid-describe');
            isInputPhonenumberValid = false;
        }
        else if (inputPhonenumber.value.length < 10 || inputPhonenumber.value.length > 11) {
            inputPhonenumber.classList.add('invalid-input');
            invalidPhonenumberDescribe.textContent = 'Số điện thoại không hợp lệ';
            invalidPhonenumberDescribe.classList.add('invalid-describe');
            isInputPhonenumberValid = false;
        }
        else {
            inputPhonenumber.classList.remove('invalid-input');
            invalidPhonenumberDescribe.textContent = '';
            invalidPhonenumberDescribe.classList.remove('invalid-describe');
            isInputPhonenumberValid = true;
        }
    }
    inputPhonenumber.addEventListener('blur', validInputPhonenumber);

    
    const validInputEmail = () => {
        console.log('email = ' + inputEmail.value);

        if (inputEmail.value === '') {
            inputEmail.classList.add('invalid-input');
            invalidEmailDescribe.textContent = 'Vui lòng nhập email';
            invalidEmailDescribe.classList.add('invalid-describe');
            isInputEmailValid = false;
        }
        else if (inputEmail.value.length < 5) {
            inputEmail.classList.add('invalid-input');
            invalidEmailDescribe.textContent = 'Email không hợp lệ';
            invalidEmailDescribe.classList.add('invalid-describe');
            isInputEmailValid = false;
        }
        else {
            inputEmail.classList.remove('invalid-input');
            invalidEmailDescribe.textContent = '';
            invalidEmailDescribe.classList.remove('invalid-describe');
            isInputEmailValid = true;
        }
    }
    inputEmail.addEventListener('blur', validInputEmail);


    const validFormtexareaDescription = () => {
        console.log('formtexareaDescription.value = ' + formtexareaDescription.value);
        if (formtexareaDescription.value === '') {
            
            formtexareaDescription.classList.add('invalid-input');
            
            invalidDescriptionDescribe.textContent = 'Vui lòng nhập lý do khám';
            
            invalidDescriptionDescribe.classList.add('invalid-describe');
            
            isValid = false;
        }
        else {
            formtexareaDescription.classList.remove('invalid-input');
            invalidDescriptionDescribe.textContent = '';
            invalidDescriptionDescribe.classList.remove('invalid-describe');
            isFormtexareaDescriptionValid = true;
        }
    }
    formtexareaDescription.addEventListener('blur', validFormtexareaDescription);

    const validGender = () => {
        for (const radio of genderRadios) {
            if (radio.checked) {
                isValid = true;
                break;
            }
            invalidGenderDescribe.textContent = 'Vui lòng chọn giới tính';
            invalidGenderDescribe.classList.add('invalid-describe');
            isValid = false;
        }
    }
    

    bookingSubmitBtn.addEventListener('click', (event) => {
        validInputName();
        validInputEmail();
        validGender();
        validInputPhonenumber();
        validInputBirthdate();
        validFormtexareaDescription();
        if (!isInputNameValid || !isInputEmailValid || !isInputPhonenumberValid 
            || !isInputBirthdateValid || !isFormtexareaDescriptionValid) {
            // event.preventDefault();
        }
    });

    $(document).ready(function () {
        $('.submit-btn').click(function () {
            // Check the input fields for valid information
            let errorMessage = '';
            const inputName = document.getElementById('form-input-name');
            const inputBirthdate = document.getElementById('form-input-birthdate');
            const inputPhonenumber = document.getElementById('form-input-phonenumber');
            const inputEmail = document.getElementById('form-input-email');
            const inputDescription = document.getElementById('form-texarea-description');



            if (inputName.value === '') {
                errorMessage += 'Họ và tên, ';
            }

            if (inputBirthdate.value === '') {
                errorMessage += 'Ngày sinh, ';
            }

            if (inputPhonenumber.value === '' ) {
                errorMessage += 'Số điện thoại, ';
            }

            if (inputPhonenumber.value.length < 10 || inputPhonenumber.value.length > 11) {
                errorMessage += 'Số điện thoại (không hợp lệ), ';
            }
            

            if (inputEmail.value === '') {
                errorMessage += 'Email, ';
            }

            if (inputDescription.value === '') {
                errorMessage += 'Lý do khám, ';
            }

            // If there is an error, show the error message
            if (errorMessage !== '') {
                return;
            }

            Swal.fire({
                title: 'Xác nhận đặt khám ?',
                text: "Bạn có chắc chắn muốn đặt đơn khám này ?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xác nhận',
                cancelButtonText: 'Huỷ',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '/api/booking',
                        data: $('#booking-form').serialize(),
                        dataType: 'JSON',
                    })
                    .done(function (response) {
                        Swal.fire('Thành công', 'Email xác nhận đã được gửi đến email của bạn, vui lòng kiểm tra email để xác nhận đặt khám', 'success')
                        .then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/';
                            }
                        });
                    })
                    .fail(function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Đã xảy ra lỗi',
                            text: 'Không thể đặt đơn khám',
                        });
                    });
                }
            });
        });
    });

</script>



